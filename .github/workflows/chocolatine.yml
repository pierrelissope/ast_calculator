name: Chocolatine Github Actions
env:
  EXECUTABLES: 'calculator'
  pwd: "."

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

jobs:

  check_coding_style:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - id: check_coding_style
        run: |
          check.sh $(pwd) $(pwd)
          while IFS= read -r line || [[ -n "$line" ]]; do
            IFS=': ' read -r -a array <<< "$line"
            file="${array[0]}"
            i="${array[1]}"
            type="${array[2]}"
            code="${array[3]}"
            echo "::error title=$type coding style error,file=${file#./},line=$i::$code"
            ERRORS_FOUND=true
          done < "coding-style-reports.log"
          if [[ $ERRORS_FOUND ]]; then
            exit 1
          else
            echo "C'est carrÃ©"
          fi

  check_program_compilation:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: check_coding_style
    steps:
      - uses: actions/checkout@v3
      - id: check_program_compilation
        run:  |
          IFS=',' read -r -a EXECUTABLES_ARRAY <<< "${{ env.EXECUTABLES }}"
          for file in "${EXECUTABLES_ARRAY[@]}"; do
              rm -f "$file"
          done
          make
      - name: Try to Clean
        run: make clean
      - name: Check if Executables has been created
        run: |
          IFS=',' read -r -a EXECUTABLES_ARRAY <<< "${{ env.EXECUTABLES }}"
          for file in "${EXECUTABLES_ARRAY[@]}"; do
              if [ ! -e "$file" ] || [ ! -x "$file" ]; then
                  exit 1
              fi
          done

  run_tests:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    container: epitechcontent/epitest-docker:latest
    needs: check_program_compilation
    steps:
      - uses: actions/checkout@v3
      - name: run_tests
        run: make tests_run

